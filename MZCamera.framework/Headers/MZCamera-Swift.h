// Generated by Apple Swift version 5.1.3 effective-4.2 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ARKit;
@import AVFoundation;
@import CoreGraphics;
@import CoreMedia;
@import Foundation;
@import MZStreamCore;
@import ObjectiveC;
@import QuartzCore;
@import SceneKit;
@import UIKit;
@import WebRTC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MZCamera",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC8MZCamera11ARKitCamera")
@interface ARKitCamera : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP8MZCamera21AudioRecorderDelegate_")
@protocol AudioRecorderDelegate
@optional
- (void)audioSampleCaptured:(CMSampleBufferRef _Nonnull)sample;
@end


@interface ARKitCamera (SWIFT_EXTENSION(MZCamera)) <AudioRecorderDelegate>
- (void)audioSampleCaptured:(CMSampleBufferRef _Nonnull)sample;
@end

@protocol SCNSceneRenderer;
@class SCNNode;
@class ARAnchor;
@class SCNScene;

@interface ARKitCamera (SWIFT_EXTENSION(MZCamera)) <ARSCNViewDelegate>
- (void)renderer:(id <SCNSceneRenderer> _Nonnull)renderer didAddNode:(SCNNode * _Nonnull)node forAnchor:(ARAnchor * _Nonnull)anchor;
- (void)renderer:(id <SCNSceneRenderer> _Nonnull)renderer didUpdateNode:(SCNNode * _Nonnull)node forAnchor:(ARAnchor * _Nonnull)anchor;
- (void)renderer:(id <SCNSceneRenderer> _Nonnull)renderer didRenderScene:(SCNScene * _Nonnull)scene atTime:(NSTimeInterval)time;
@end

@protocol RoomVideoTrack;

SWIFT_PROTOCOL("_TtP8MZCamera17RoomVideoDelegate_")
@protocol RoomVideoDelegate
@optional
- (void)roomVideoDidConnectSignalServer;
- (void)roomVideoDidSendWithPeerId:(NSString * _Nonnull)peerId and:(id <RoomVideoTrack> _Nonnull)videoTrack;
- (void)roomVideoDidLeaveWithPeerId:(NSString * _Nonnull)peerId;
- (void)roomVideoDidSendWithLimitMessage:(NSString * _Nonnull)limitMessage;
- (void)roomVideoWithPeerId:(NSString * _Nonnull)peerId didUpdateVideo:(BOOL)enable;
- (void)roomVideoDidLeave;
@end

@class VideoPipeline;
@class MP4SegmentDescriptor;
@class TrafficMonitor;
@class TrafficSummary;
@class TrafficAlert;

SWIFT_PROTOCOL("_TtP8MZCamera21VideoPipelineDelegate_")
@protocol VideoPipelineDelegate <RoomVideoDelegate>
@optional
- (void)pipelineMP4FileRecorded:(NSURL * _Nonnull)filePath;
- (void)pipelineStateChanged:(VideoPipeline * _Nonnull)sender;
- (void)segmentDataReceived:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)consolidatedDataReceived:(NSArray<MP4SegmentDescriptor *> * _Null_unspecified)descriptors;
- (void)playlistData:(NSString * _Null_unspecified)playlist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)rootPlaylistData:(NSString * _Null_unspecified)playlist;
- (void)trafficStateChanged:(TrafficMonitor * _Nonnull)monitor;
- (void)trafficStatisticChange:(TrafficSummary * _Nonnull)summary;
- (void)trafficNetworkChange:(TrafficAlert * _Nonnull)alert;
@end


@interface ARKitCamera (SWIFT_EXTENSION(MZCamera)) <VideoPipelineDelegate>
- (void)pipelineMP4FileRecorded:(NSURL * _Nonnull)filePath;
- (void)pipelineStateChanged:(VideoPipeline * _Nonnull)sender;
- (void)segmentDataReceived:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)playlistData:(NSString * _Null_unspecified)playlist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)rootPlaylistData:(NSString * _Null_unspecified)playlist;
- (void)trafficStateChanged:(TrafficMonitor * _Nonnull)monitor;
- (void)trafficStatisticChange:(TrafficSummary * _Nonnull)summary;
- (void)trafficNetworkChange:(TrafficAlert * _Nonnull)alert;
- (void)roomVideoDidConnectSignalServer;
- (void)roomVideoDidSendWithPeerId:(NSString * _Nonnull)peerId and:(id <RoomVideoTrack> _Nonnull)videoTrack;
- (void)roomVideoDidLeaveWithPeerId:(NSString * _Nonnull)peerId;
- (void)roomVideoDidSendWithLimitMessage:(NSString * _Nonnull)limitMessage;
- (void)roomVideoWithPeerId:(NSString * _Nonnull)peerId didUpdateVideo:(BOOL)enable;
- (void)roomVideoDidLeave;
@end

@class ARSCNView;
@protocol UIViewControllerTransitionCoordinator;
@class ARSession;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8MZCamera25ARKitCameraViewController")
@interface ARKitCameraViewController : UIViewController <ARSessionDelegate>
@property (nonatomic, weak) IBOutlet ARSCNView * _Null_unspecified sceneView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)session:(ARSession * _Nonnull)session didFailWithError:(NSError * _Nonnull)error;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureOutput;
@class AVCaptureConnection;

SWIFT_CLASS("_TtC8MZCamera13AudioRecorder")
@interface AudioRecorder : NSObject <AVCaptureAudioDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC8MZCamera6Camera")
@interface Camera : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@interface Camera (SWIFT_EXTENSION(MZCamera)) <AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end



@class AVCapturePhotoOutput;
@class AVCapturePhoto;

@interface Camera (SWIFT_EXTENSION(MZCamera)) <AVCapturePhotoCaptureDelegate>
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)output didFinishProcessingPhoto:(AVCapturePhoto * _Nonnull)photo error:(NSError * _Nullable)error;
@end


@interface Camera (SWIFT_EXTENSION(MZCamera)) <VideoPipelineDelegate>
- (void)pipelineMP4FileRecorded:(NSURL * _Nonnull)filePath;
- (void)pipelineStateChanged:(VideoPipeline * _Nonnull)sender;
- (void)segmentDataReceived:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)playlistData:(NSString * _Null_unspecified)playlist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)rootPlaylistData:(NSString * _Null_unspecified)playlist;
- (void)trafficStateChanged:(TrafficMonitor * _Nonnull)monitor;
- (void)trafficStatisticChange:(TrafficSummary * _Nonnull)summary;
- (void)trafficNetworkChange:(TrafficAlert * _Nonnull)alert;
@end



@class UIImage;

SWIFT_PROTOCOL("_TtP8MZCamera14CameraDelegate_")
@protocol CameraDelegate <RoomVideoDelegate>
@optional
- (void)cameraMP4FileRecorded:(NSURL * _Nonnull)filePath;
- (void)cameraImageTaken:(UIImage * _Nonnull)image;
- (void)cameraStateChanged:(id _Nonnull)sender;
- (void)segmentDataReceived:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)playlistData:(NSString * _Null_unspecified)playlist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)rootPlaylistData:(NSString * _Null_unspecified)playlist;
- (void)trafficStateChanged:(TrafficMonitor * _Nonnull)monitor;
- (void)trafficStatisticChange:(TrafficSummary * _Nonnull)summary;
- (void)trafficNetworkChange:(TrafficAlert * _Nonnull)alert;
@end


SWIFT_CLASS("_TtC8MZCamera12CameraFacade")
@interface CameraFacade : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end










@interface CameraFacade (SWIFT_EXTENSION(MZCamera))
- (void)roomVideoDidConnectSignalServer;
- (void)roomVideoDidSendWithPeerId:(NSString * _Nonnull)peerId and:(id <RoomVideoTrack> _Nonnull)videoTrack;
- (void)roomVideoDidLeaveWithPeerId:(NSString * _Nonnull)peerId;
- (void)roomVideoDidSendWithLimitMessage:(NSString * _Nonnull)limitMessage;
- (void)roomVideoWithPeerId:(NSString * _Nonnull)peerId didUpdateVideo:(BOOL)enable;
- (void)roomVideoDidLeave;
@end




@interface CameraFacade (SWIFT_EXTENSION(MZCamera)) <VideoPipelineDelegate>
- (void)pipelineMP4FileRecorded:(NSURL * _Nonnull)filePath;
- (void)pipelineStateChanged:(VideoPipeline * _Nonnull)sender;
- (void)segmentDataReceived:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)playlistData:(NSString * _Null_unspecified)playlist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)rootPlaylistData:(NSString * _Null_unspecified)playlist;
- (void)trafficStateChanged:(TrafficMonitor * _Nonnull)monitor;
- (void)trafficStatisticChange:(TrafficSummary * _Nonnull)summary;
- (void)trafficNetworkChange:(TrafficAlert * _Nonnull)alert;
@end


SWIFT_PROTOCOL("_TtP8MZCamera20CameraFacadeDelegate_")
@protocol CameraFacadeDelegate
@optional
- (void)cameraWithFacade:(CameraFacade * _Nonnull)facade token:(UIImage * _Nonnull)image;
- (void)cameraWithFacade:(CameraFacade * _Nonnull)facade recordedfile:(NSURL * _Nonnull)recordedfile;
- (void)cameraWithFacade:(CameraFacade * _Nonnull)facade videoPipelineStateChange:(VideoPipeline * _Nonnull)videoPipelineStateChange;
- (void)cameraWithFacade:(CameraFacade * _Nonnull)facade segment:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)cameraWithFacade:(CameraFacade * _Nonnull)facade mediaPlaylist:(NSString * _Null_unspecified)mediaPlaylist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)cameraWithFacade:(CameraFacade * _Nonnull)facade rootPlaylist:(NSString * _Null_unspecified)rootPlaylist;
- (void)trafficStateChanged:(TrafficMonitor * _Nonnull)monitor;
- (void)trafficStatisticChange:(TrafficSummary * _Nonnull)summary;
- (void)trafficNetworkChange:(TrafficAlert * _Nonnull)alert;
@end

@class UIView;

SWIFT_CLASS("_TtC8MZCamera20CameraViewController")
@interface CameraViewController : UIViewController
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified previewView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified secondPreviewView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class MTIImage;

SWIFT_PROTOCOL("_TtP8MZCamera20MediaPreviewProtocol_")
@protocol MediaPreviewProtocol <RTCVideoRenderer>
- (void)updateWithFrame:(CGRect)frame;
- (void)renderWithImage:(MTIImage * _Nonnull)image;
@end


SWIFT_CLASS("_TtC8MZCamera12MediaPreview")
@interface MediaPreview : UIView <MediaPreviewProtocol>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)updateWithFrame:(CGRect)frame;
- (void)renderWithImage:(MTIImage * _Nonnull)image;
- (void)removeFromSuperview;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end







@class RTCVideoFrame;

@interface MediaPreview (SWIFT_EXTENSION(MZCamera))
- (void)setSize:(CGSize)size;
- (void)renderFrame:(RTCVideoFrame * _Nullable)frame;
@end









SWIFT_PROTOCOL("_TtP8MZCamera14RoomVideoTrack_")
@protocol RoomVideoTrack
- (NSString * _Nonnull)getTrackId SWIFT_WARN_UNUSED_RESULT;
@end


@interface RTCVideoTrack (SWIFT_EXTENSION(MZCamera)) <RoomVideoTrack>
- (NSString * _Nonnull)getTrackId SWIFT_WARN_UNUSED_RESULT;
@end






SWIFT_CLASS("_TtC8MZCamera13VideoPipeline")
@interface VideoPipeline : NSObject
- (void)toggleVideoWithIsEnabled:(BOOL)isEnabled;
- (void)toggleAudioWithIsEnabled:(BOOL)isEnabled;
- (void)stopStreamingWithLeave:(BOOL)leave;
- (void)startLiveStreamingWithId:(NSString * _Nonnull)id audioOnly:(BOOL)audioOnly;
- (void)startChunkedVideoRecording;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface VideoPipeline (SWIFT_EXTENSION(MZCamera)) <GenericEncoderDelegate>
- (void)compressedVideoDataReceived:(CMSampleBufferRef _Null_unspecified)sampleBuffer;
@end


@interface VideoPipeline (SWIFT_EXTENSION(MZCamera)) <FDKAACEncoderDelegate>
- (BOOL)audioSamplingSupported SWIFT_WARN_UNUSED_RESULT;
- (void)createAudioTranscoder;
- (void)compressedAudioDataReceived:(uint8_t * _Null_unspecified)data size:(NSInteger)size pts:(CMTime)pts;
@end







SWIFT_CLASS("_TtC8MZCamera18VideoPipelineProxy")
@interface VideoPipelineProxy : NSObject
- (void)putVideoSampleWithSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer;
- (void)startLiveStreamingWithId:(NSString * _Nonnull)id audioOnly:(BOOL)audioOnly;
- (void)stop;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface VideoPipelineProxy (SWIFT_EXTENSION(MZCamera)) <AudioRecorderDelegate>
- (void)audioSampleCaptured:(CMSampleBufferRef _Nonnull)sample;
@end


@interface VideoPipelineProxy (SWIFT_EXTENSION(MZCamera)) <VideoPipelineDelegate>
- (void)pipelineMP4FileRecorded:(NSURL * _Nonnull)filePath;
- (void)pipelineStateChanged:(VideoPipeline * _Nonnull)sender;
- (void)segmentDataReceived:(NSData * _Null_unspecified)data trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType initSegment:(BOOL)initSegment rap:(BOOL)randomAccessPoint segmentIndex:(NSUInteger)segmentIndex fragmentIndex:(NSUInteger)fragmentIndex segmentStart:(BOOL)segmentStart timestamp:(double)firstPts;
- (void)playlistData:(NSString * _Null_unspecified)playlist trackID:(uint32_t)trackID mediaType:(AVMediaType _Null_unspecified)mediaType;
- (void)rootPlaylistData:(NSString * _Null_unspecified)playlist;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
